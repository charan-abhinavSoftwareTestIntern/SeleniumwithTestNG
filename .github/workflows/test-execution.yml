on:
  workflow_dispatch:

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          echo "Chrome Version: $(google-chrome --version)"

      - name: Install ChromeDriver (Matching Version)
        run: |
          CHROMEDRIVER_VERSION=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json" | jq -r ".channels.Stable.version")
          DOWNLOAD_URL=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json" | jq -r ".channels.Stable.downloads.chromedriver[] | select(.platform == \"linux64\").url")

          if [[ -z "$DOWNLOAD_URL" ]]; then
            echo "ChromeDriver download URL not found!"
            exit 1
          fi

          echo "Downloading ChromeDriver version: $CHROMEDRIVER_VERSION"
          wget -q "$DOWNLOAD_URL" -O chromedriver-linux64.zip
          unzip chromedriver-linux64.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver
          echo "ChromeDriver Version: $(chromedriver --version)"

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Run Tests with Maven
        id: test_execution
        run: mvn clean test

      - name: Install XML Utilities
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: Validate TestNG Results
        run: |
          XML_FILE="target/surefire-reports/testng-results.xml"

          if [ ! -f "$XML_FILE" ]; then
            echo "⚠️ testng-results.xml NOT FOUND! Setting all results to 0."
            echo "PASSED=0" >> $GITHUB_ENV
            echo "FAILED=0" >> $GITHUB_ENV
            echo "SKIPPED=0" >> $GITHUB_ENV
            echo "TOTAL=0" >> $GITHUB_ENV
            exit 0
          fi

          echo "✅ testng-results.xml FOUND! Extracting test results..."
          cat "$XML_FILE"

          PASSED=$(xmllint --xpath "string(//testng-results/@passed)" "$XML_FILE" 2>/dev/null)
          FAILED=$(xmllint --xpath "string(//testng-results/@failed)" "$XML_FILE" 2>/dev/null)
          SKIPPED=$(xmllint --xpath "string(//testng-results/@skipped)" "$XML_FILE" 2>/dev/null)

          PASSED=${PASSED:-0}
          FAILED=${FAILED:-0}
          SKIPPED=${SKIPPED:-0}
          TOTAL=$((PASSED + FAILED + SKIPPED))

          echo "PASSED=$PASSED" >> $GITHUB_ENV
          echo "FAILED=$FAILED" >> $GITHUB_ENV
          echo "SKIPPED=$SKIPPED" >> $GITHUB_ENV
          echo "TOTAL=$TOTAL" >> $GITHUB_ENV

      - name: Upload Allure Report as Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-results

      - name: Send Google Chat Notification
        if: always()
        run: |
          CHAT_MESSAGE="📢 *Test Suite Execution Summary* 📢\n
          ✅ *Passed:* $PASSED\n
          ❌ *Failed:* $FAILED\n
          ⚠️ *Skipped:* $SKIPPED\n
          📌 *Total:* $TOTAL\n
          🔗 *Allure Report:* Attachments Included"

          curl -X POST -H "Content-Type: application/json" \
            -d "{\"text\": \"$CHAT_MESSAGE\"}" \
            "${{ secrets.GOOGLE_CHAT_WEBHOOK }}"
