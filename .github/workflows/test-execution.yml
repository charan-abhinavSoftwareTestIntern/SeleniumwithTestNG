name: Run Selenium Tests

on:
  workflow_dispatch:

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Dependencies (Chrome, ChromeDriver, Sendmail)
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable libxml2-utils sendmail jq
          echo "✅ Dependencies Installed!"
          echo "📌 Chrome Version: $(google-chrome --version)"

      - name: Install ChromeDriver
        run: |
          CHROMEDRIVER_VERSION=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json" | jq -r ".channels.Stable.version")
          DOWNLOAD_URL=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json" | jq -r ".channels.Stable.downloads.chromedriver[] | select(.platform == \"linux64\").url")

          if [ -z "$DOWNLOAD_URL" ]; then
            echo "❌ Failed to fetch ChromeDriver URL"
            exit 1
          fi

          wget -q "$DOWNLOAD_URL" -O chromedriver.zip
          unzip chromedriver.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver
          echo "✅ ChromeDriver Installed: $(chromedriver --version)"

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Run Tests with Maven
        id: test_execution
        run: |
          echo "🚀 Running tests using testng.xml..."
          mvn clean test -Dsurefire.suiteXmlFiles=src/test/resources/testng.xml || true

      - name: Extract Test Results
        run: |
          XML_FILE="target/surefire-reports/testng-results.xml"

          if [ ! -f "$XML_FILE" ]; then
            echo "⚠️ testng-results.xml NOT FOUND! Tests may have failed before generating reports."
            echo "PASSED=0" >> $GITHUB_ENV
            echo "FAILED=0" >> $GITHUB_ENV
            echo "SKIPPED=0" >> $GITHUB_ENV
            echo "TOTAL=0" >> $GITHUB_ENV
            exit 0
          fi

          PASSED=$(xmllint --xpath "string(//testng-results/@passed)" "$XML_FILE" 2>/dev/null || echo "0")
          FAILED=$(xmllint --xpath "string(//testng-results/@failed)" "$XML_FILE" 2>/dev/null || echo "0")
          SKIPPED=$(xmllint --xpath "string(//testng-results/@skipped)" "$XML_FILE" 2>/dev/null || echo "0")
          TOTAL=$((PASSED + FAILED + SKIPPED))

          echo "Extracted Results: ✅ Passed=$PASSED, ❌ Failed=$FAILED, ⚠️ Skipped=$SKIPPED, 📌 Total=$TOTAL"

          echo "PASSED=$PASSED" >> $GITHUB_ENV
          echo "FAILED=$FAILED" >> $GITHUB_ENV
          echo "SKIPPED=$SKIPPED" >> $GITHUB_ENV
          echo "TOTAL=$TOTAL" >> $GITHUB_ENV

      - name: Generate Allure Report Link
        run: |
          ALLURE_REPORT_URL="http://192.168.100.77:51643/index.html"
          echo "ALLURE_REPORT_URL=$ALLURE_REPORT_URL" >> $GITHUB_ENV
          echo "🔗 Allure Report: $ALLURE_REPORT_URL"

      - name: Debug Mail Command
        run: |
          if ! command -v sendmail &> /dev/null; then
            echo "❌ sendmail command not found! Email will not be sent."
            exit 1
          else
            echo "✅ sendmail is available!"
          fi

      - name: Send Email Notification
        if: success() || failure()
        run: |
          SUBJECT="📝 TestNG Suite Execution Summary"
          BODY="📊 Test Suite Execution Summary:\n\n✅ Passed: $PASSED\n❌ Failed: $FAILED\n⚠️ Skipped: $SKIPPED\n📌 Total: $TOTAL\n\n🔗 Allure Report: $ALLURE_REPORT_URL"

          echo -e "To: ${{ secrets.RECIPIENT_EMAIL }}\nSubject: $SUBJECT\n\n$BODY" | sendmail -t
          echo "📧 Email sent to: ${{ secrets.RECIPIENT_EMAIL }}"

      - name: Send Google Chat Notification (Single Message)
        if: success() || failure()
        run: |
          if [ -f "/tmp/chat_message_sent" ]; then
            echo "📢 Google Chat message already sent. Skipping duplicate notification."
            exit 0
          fi

          CHAT_MESSAGE="📢 *Test Suite Execution Summary* 📢\n
          ✅ *Passed:* $PASSED\n
          ❌ *Failed:* $FAILED\n
          ⚠️ *Skipped:* $SKIPPED\n
          📌 *Total:* $TOTAL\n
          🔗 *Allure Report:* $ALLURE_REPORT_URL"

          curl -X POST -H "Content-Type: application/json" \
            -d "{\"text\": \"$CHAT_MESSAGE\"}" \
            "${{ secrets.GOOGLE_CHAT_WEBHOOK }}"

          echo "📢 Google Chat notification sent successfully!"
          touch /tmp/chat_message_sent
